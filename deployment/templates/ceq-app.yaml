apiVersion: v1
kind: ConfigMap
metadata:
  name: ceq-app-env
  namespace: {{ .Values.namespace }}
data:
  BROKER_MQTT_URL: "tcp://mosquitto:1883"
  KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
  BROKER_KAFKA_URL: "tcp://kafka:9092"
  MQTT_SRC_TOPIC_NAME: "train-model-result"
  MQTT_DEST_TOPIC_NAM: "train-command"
  KAFKA_TOPIC_NAME: "train-monitoring"
  KAFKA_TOPIC_CAPTURE_NAME: "train-command-capture"
  TRAIN_HTTP_URL: "http://capture-app:8080/capture"
  LOGGER_LEVEL: "INFO"
  LOGGER_LEVEL_CATEGORY_CAMEL: "INFO"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ceq-app
    app.kubernetes.io/component: ceq-app
    app.kubernetes.io/instance: ceq-app
    app.kubernetes.io/name: ceq-app
    app.kubernetes.io/part-of: train
  name: ceq-app
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ceq-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: ceq-app
        deployment: ceq-app
    spec:
      containers:
      - image: {{ include "image" (dict "Values" .Values "name" "ceqApp") | quote }}
        imagePullPolicy: {{ include "imagePullPolicy" (dict "Values" .Values "name" "ceqApp") | quote }}
        name: ceq-app
        envFrom:
        - configMapRef:
            name: ceq-app-env
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: train
      serviceAccount: train
      terminationGracePeriodSeconds: 30