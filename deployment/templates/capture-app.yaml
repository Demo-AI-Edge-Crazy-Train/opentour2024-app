apiVersion: v1
kind: ConfigMap
metadata:
  name: capture-app-env
  namespace: {{ .Values.namespace }}
data:
  VIDEO_PATH: "/deployments/data/track-stop-and-slowdown.avi"
  TMP_FOLDER: "/tmp"
  INTERVAL: "100"
  PERIODIC_CAPTURE: "100"
  LOGGER_LEVEL: "INFO"
  MQTT_BROKER: "tcp://mosquitto:1883"
  MQTT_TOPIC: "train-image"
  SAVE_IMAGE: "false"
  MOCK: "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: capture-app-data
  namespace: {{ .Values.namespace }}
spec:
  storageClassName: gp3-csi
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: capture-app
    app.kubernetes.io/component: capture-app
    app.kubernetes.io/instance: capture-app
    app.kubernetes.io/name: capture-app
    app.kubernetes.io/part-of: train
  name: capture-app
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: capture-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: capture-app
        deployment: capture-app
    spec:
      containers:
      - image: {{ include "image" (dict "Values" .Values "name" "captureApp") | quote }}
        imagePullPolicy: {{ include "imagePullPolicy" (dict "Values" .Values "name" "captureApp") | quote }}
        name: capture-app
        envFrom:
        - configMapRef:
            name: capture-app-env
        ports:
        - containerPort: 8080
          protocol: TCP
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: data
          mountPath: /tmp/crazy-images
      serviceAccountName: train
      serviceAccount: train
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: capture-app-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: capture-app
    app.kubernetes.io/component: capture-app
    app.kubernetes.io/instance: capture-app
    app.kubernetes.io/name: capture-app
    app.kubernetes.io/part-of: train
  name: capture-app
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - name: http
    port: 8080
  selector:
    app: capture-app
    deployment: capture-app
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: capture-app
  namespace: {{ .Values.namespace }}
spec:
  port:
    targetPort: 8080 
  to:
    kind: Service
    name: capture-app
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
